name: Check Secrets
on: push

jobs:
  filter-targets:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    permissions: read-all
    env:
      TARGET_ENV_LIST: '["env_1", "env2"]'
      TARGET: 'DEV'
      REPO_ID: ${{github.repository_id}}
    steps:
      - name: Filter env
        uses: actions/github-script@v6
        with:
          script: |-
            const {TARGET_ENV_LIST, TARGET, REPO_ID} = process.env
            const targetEnvList = JSON.parse(TARGET_ENV_LIST)
            console.log(targetEnvList)

  in-env:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      matrix:
        env: ${{fromJson('["env_1", "env2"]')}}
        target: [DEV, STG, PROD]
    environment: ${{matrix.env}}
    outputs:
      done: ${{toJson(steps.check-done.outputs)}}
    env:
      TOKEN: >-
        ${{
          matrix.target == 'DEV' && secrets.DEV ||
          matrix.target == 'STG' && secrets.STG ||
          matrix.target == 'PROD' && secrets.PROD ||
          ''
        }}
    steps:
      - name: Check token
        run: echo ${{env.TOKEN}}
        if: ${{env.TOKEN}}
      - name: Secret list
        env:
          SECRETS: ${{toJson(secrets)}}
        run: echo ${SECRETS} | jq 'keys'
      - name: Set output
        id: check-done
        run: |
          echo "done_${{matrix.env}}_${{matrix.target}}=${{env.TOKEN != ''}}" >> $GITHUB_OUTPUT

  in-env2:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      matrix:
        env: ${{fromJson('["env_1", "env2"]')}}
        target: [DEV, STG, PROD]
    steps:
      - name: Check token
        run: |
          THIS_TARGET_SECRET=$(echo $TOKEN | jq -e '.${{matrix.target}}')
          [ "$THIS_TARGET_SECRET" = "${{secrets.secrets}}" ] && echo "Same" || echo "Not equal"
        env:
          TOKEN: ${{ toJson(secrets) }}

  check-done:
    runs-on: ubuntu-latest
    needs: [in-env]
    steps:
      - name: Check
        run: echo $NEED | jq
        env:
          NEED: ${{toJson(needs)}}  
